"use strict";var JackDash=function(){return{values:function(e){if(e instanceof Array||typeof e==="string"||typeof e==="number"){try{throw new CustomError("Values","values must be instantiated with an object")}catch(e){return e}}else{return Object.values(e)}},keys:function(e){if(e instanceof Array||typeof e==="string"||typeof e==="number"){try{throw new CustomError("Keys","keys must be instantiated with an object")}catch(e){return e}}else{return Object.keys(e)}},concat:function(e,n){if(typeof e==="string"||typeof n==="string"||typeof e==="object"&&!(e instanceof Array)||typeof n==="object"&&!(n instanceof Array)||typeof e==="number"||typeof n==="number"||!arguments){try{throw new CustomError("Concat","concat must be instantiated with two arrays")}catch(e){return e}}else{var r=[];e.forEach(function(e){r.push(e)});n.forEach(function(e){r.push(e)});return r}},unique:function(e,n){if(typeof e==="string"||typeof e==="number"||typeof e==="object"&&!(e instanceof Array)){try{throw new CustomError("Unique","unique must be instantiated with an array")}catch(e){return e}}else{var r=[];var t;var o=e.forEach(function(e){if(n){t=r.find(function(r){return e[n]===r[n]})}else{t=r.find(function(n){return e===n})}!t?r.push(e):null});return r}},dynamicObject:function(e,n){var r=[],t=[],o={};e.map(function(e){r.push(e)});n.map(function(e){t.push(e)});if(r.length!==t.length){try{throw new CustomError("Dynamic Object","Make sure you have supplied the same amount of values as keys")}catch(e){return e}}else{r.map(function(e,n){o[e]=t[n]});return o}},async:function(){var e=0;var n=[];var r=false;var t=undefined;var o=undefined;var a=0;var u={};var i=[];return{parallel:function(r,t){if(typeof r==="string"||typeof r==="number"){o=new CustomError("Async parallexql","You must provide either an object or array of functions");return t(o,n)}if(typeof r==="object"&&r instanceof Array){var a=function(a,u){e++;if(a!==null){e=r.length;o=new CustomError("Async parallel",a)}else{n.push(u)}if(e===r.length){t(o,n)}};r.forEach(function(e){e(a)})}else{var i=Object.keys(r);var s=[];i.forEach(function(e){s.push({function:r[e],propertyName:e})});var a=function(n,r,a){e++;if(n!==null){e=s.length;o=new CustomError("Async parallel",n)}else{u[a]=r}if(e===s.length){t(o,u)}};s.forEach(function(e,n){e.function(function(n,r){a(n,r,e.propertyName)})})}},series:function(e,n){if(typeof e==="string"||typeof e==="number"){o=new CustomError("Async series","You must provide either an object or array of functions");return n(o,t)}if(typeof e==="object"&&e instanceof Array){var r=0;var t=[];var a=function(){if(r<e.length){e[r](i)}else{n(o,t)}};var i=function(n,u){if(n!==null){r=e.length;o=new CustomError("Async Series",n);a()}else{t.push(u);r++;a()}};a()}else{var s=Object.keys(e);var f=[];s.forEach(function(n){f.push({function:e[n],propertyName:n})});var a=function(){if(r<s.length){f[r].function(function(e,n){i(e,n,f[r].propertyName)})}else{n(o,u)}};var i=function(e,n,t){if(e!==null){r=s.length;o=new CustomError("Async Series",e);a()}else{u[t]=n;r++;a()}};a()}}}}()}};var CustomError=function(e,n){return{message:"JackDash: "+e+" threw the following error: "+n}};module.exports=JackDash;